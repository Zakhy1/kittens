version: '3.9'

services:
  web:
    build: ./app
    #  place image
    command: >
      sh -c "
      poetry run python manage.py collectstatic --noinput &&
      poetry run python manage.py makemigrations --noinput &&
      poetry run python manage.py migrate --noinput &&
      poetry run python manage.py loaddata db.json &&
      poetry run python manage.py runserver 
      "
    #      runserver потому что нет смысла поднимать веб-сервер для раздачи статики.
    #      Если добавить nginx то можно запустить gunicorn
    #      poetry run gunicorn --workers=1 project.wsgi:application --bind 0.0.0.0:8000
    ports:
      - '8000:8000'
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - ./app/static:/home/app/web/static/
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
